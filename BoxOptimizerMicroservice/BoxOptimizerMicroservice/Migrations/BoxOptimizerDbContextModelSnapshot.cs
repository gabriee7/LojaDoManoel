// <auto-generated />
using System;
using BoxOptimizerMicroservice.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoxOptimizerMicroservice.Migrations
{
    [DbContext(typeof(BoxOptimizerDbContext))]
    partial class BoxOptimizerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoxOptimizerMicroservice.Entities.Caixa", b =>
                {
                    b.Property<Guid>("_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("_LastModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedTime");

                    b.Property<int>("_altura")
                        .HasColumnType("int")
                        .HasColumnName("Altura");

                    b.Property<int>("_comprimento")
                        .HasColumnType("int")
                        .HasColumnName("Comprimento");

                    b.Property<DateTime>("_creationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<int>("_largura")
                        .HasColumnType("int")
                        .HasColumnName("Largura");

                    b.Property<string>("_nomeDaCaixa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NomeCaixa");

                    b.HasKey("_id");

                    b.HasIndex("_nomeDaCaixa")
                        .IsUnique();

                    b.ToTable("Caixa", (string)null);

                    b.HasData(
                        new
                        {
                            _id = new Guid("e2a8c9f0-7d3b-4a1e-9c6a-08d7e5b4c3f2"),
                            _altura = 30,
                            _comprimento = 80,
                            _creationTime = new DateTime(2025, 5, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            _largura = 40,
                            _nomeDaCaixa = "Caixa 1"
                        },
                        new
                        {
                            _id = new Guid("b5d9e8c1-6a2f-4b0d-8a3e-1f9c8b7a6d5e"),
                            _altura = 80,
                            _comprimento = 40,
                            _creationTime = new DateTime(2025, 5, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            _largura = 50,
                            _nomeDaCaixa = "Caixa 2"
                        },
                        new
                        {
                            _id = new Guid("c9f0b7a2-5e1d-4c9a-b2d8-2a0e1c9f8b7d"),
                            _altura = 50,
                            _comprimento = 60,
                            _creationTime = new DateTime(2025, 5, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            _largura = 80,
                            _nomeDaCaixa = "Caixa 3"
                        });
                });

            modelBuilder.Entity("BoxOptimizerMicroservice.Entities.ClientApplication", b =>
                {
                    b.Property<Guid>("_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("_LastModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedTime");

                    b.Property<DateTime>("_creationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("_hashedKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HashedApiKey");

                    b.Property<string>("_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nome");

                    b.HasKey("_id");

                    b.HasIndex("_nome")
                        .IsUnique();

                    b.ToTable("AplicacaoCliente", (string)null);

                    b.HasData(
                        new
                        {
                            _id = new Guid("2a8badd0-2a0a-4b79-b51f-9e7a0e2b8c3d"),
                            _creationTime = new DateTime(2025, 5, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            _hashedKey = "61fIzNFUoKv3An80F60QB/bJrDAw2H+B+uwvRegT644=",
                            _nome = "Aplicação Cliente via Seed"
                        });
                });

            modelBuilder.Entity("BoxOptimizerMicroservice.Entities.EmbalagemResultado", b =>
                {
                    b.Property<Guid>("_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("_LastModifiedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedTime");

                    b.Property<DateTime>("_creationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("_observacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observacao");

                    b.Property<int>("_pedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoId");

                    b.PrimitiveCollection<string>("_produtosNestaCaixa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProdutosNestaCaixa");

                    b.Property<Guid?>("_tipoCaixaUsadaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TipoCaixaUsadaId");

                    b.HasKey("_id");

                    b.HasIndex("_tipoCaixaUsadaId");

                    b.ToTable("EmbalagemResultado", (string)null);
                });

            modelBuilder.Entity("BoxOptimizerMicroservice.Entities.EmbalagemResultado", b =>
                {
                    b.HasOne("BoxOptimizerMicroservice.Entities.Caixa", "_tipoCaixaUsada")
                        .WithMany()
                        .HasForeignKey("_tipoCaixaUsadaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("_tipoCaixaUsada");
                });
#pragma warning restore 612, 618
        }
    }
}
